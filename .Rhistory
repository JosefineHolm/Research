ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
ggplot(data=x1,
aes(x=cond.f, y=neutralct, fill=id, label=neutralct)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=neutralct, ymax=neutralct+se.neutralct), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of neutral behaviors") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
ggplot(data=x1,
aes(x=cond.f, y=m.neutralct, fill=id, label=m.neutralct)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.neutralct, ymax=m.neutralct+se.neutralct), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of neutral behaviors") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
x1 <- group_by(care, cond.f, id) %>%
summarize(m.neutralct = mean(neutralct, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.neutralct=sd(neutralct, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(neutralct)), # of observations, excluding NAs.
se.neutralct=s.neutralct/sqrt(n))
ggplot(data=x1,
aes(x=cond.f, y=m.neutralct, fill=id, label=m.neutralct)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.neutralct, ymax=m.neutralct+se.neutralct), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of neutral behaviors") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
lsmeans(m1,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
ndm1=gls(neutrald~cond.f, data=care, na.action=na.omit, method="ML")
summary(ndm1)
ndm2=lme(neutrald~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(out2)
anova(ndm1,ndm2)
summary(ndm2)
anova(ndm1,ndm2)
#Since the model with the random factor had a lower IAC score we wanna use that
ndm1=gls(neutrald~cond.f, data=care, na.action=na.omit, method="ML")
summary(ndm1)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(ndm2, add.smooth=FALSE, which=1)
E=resid(ndm2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
ndE1<-residuals(ndm2)
plot(filter(care, !is.na(neutrald)) %>% dplyr::select(id),
ndE1, xlab="id", ylab="Residuals")
plot(filter(care, !is.na(neutrald)) %>% dplyr::select(id),
ndE1, xlab="id", ylab="Residuals")
plot(filter(care, !is.na(neutrald)) %>% dplyr::select(cond.f),
ndE1, xlab="id", ylab="Residuals")
qqnorm(residuals(ndm2))
qqline(residuals(ndm2))
ad.test(residuals(ndm2))#this one says error
summary(ndm1)
lsmeans(ndm2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
lsmeans(ndm2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
qqnorm(residuals(ndm2))
qqline(residuals(ndm2))
ad.test(residuals(ndm2))#this one says error
summary(ndm1)
lsmeans(ndm2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
ndx1 <- group_by(care, cond.f, id) %>%
summarize(m.neutrald = mean(neutrald, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.neutrald=sd(neutrald, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(neutrald)), # of observations, excluding NAs.
se.neutrald=s.neutrald/sqrt(n))
ndx1
ggplot(data=ndx1,
aes(x=cond.f, y=m.neutrald, fill=id, label=m.neutrald)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.neutrald, ymax=m.neutrald+se.neutrald), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Duration of neutral behaviors") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
pcm1=gls(positivect~cond.f, data=care, na.action=na.omit, method="ML")
summary(pcm1)
pcm2=lme(positivect~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
positivect
care$positivect
care$positivect=rowSums(care[,c("foodgrunt", "grunt","lipsmack","pbaboon", "phuman","hgroomct","bgroomct","ghgroomct","gbgroomct","penisd", "playb", "plays","manenrichct","embraceh", "embraceb", "dproxct","dproxout", "movetoobs","playvocal")])
care$positivect
care$positived=rowSums(care[,c("hgroomd","bgroomd","ghgroomd","gbgroomd","manenrichd")])
care$positived
pdm1=gls(positived~cond.f, data=care, na.action=na.omit, method="ML")
summary(pdm1)
positived~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
pdm2=lme(positived~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(out2)
summary(pdm2)
summary(m2)
anova(pdm1,pdm2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(pdm2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
#trying the other residuals plot clay showed
E1<-residuals(pdm2)
plot(filter(care, !is.na(neutralct)) %>% dplyr::select(id),
E1, xlab="id", ylab="Residuals")
plot(filter(care, !is.na(neutrald)) %>% dplyr::select(id),
E1, xlab="id", ylab="Residuals")
plot(filter(care, !is.na(neutrald)) %>% dplyr::select(cond.f),
E1, xlab="id", ylab="Residuals")
qqnorm(residuals(pdm2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
ad.test(residuals(pdm2))#this one says error
summary(pdm2)
lsmeans(pdm2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.positived = mean(positived, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.positived=sd(positved, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(positved)), # of observations, excluding NAs.
se.positived=s.positived/sqrt(n))
x1 <- group_by(care, cond.f, id) %>%
summarize(m.positived = mean(positived, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.positived=sd(positived, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(positived)), # of observations, excluding NAs.
se.positived=s.positived/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.positived, fill=id, label=m.positived)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.positived, ymax=m.positived+se.positived), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of neutral behaviors") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
#load data
care=read.table(file="caredata.csv", header=TRUE, sep=",")
names(care)
str(care)
#Packages used
library(nlme)
library(dplyr)
#packages gotten from last years project
library(lattice)
install.packages("lme4")
care$cond.f=as.factor(care$cond)
library(MuMIn)
str(care)
install.packages("lsmeans")
install.packages("MuMIn")
install.packages("ggplot2")
library(ggplot2)
#Putting the 4 condition in as a factor
library(lsmeans)
install.packages("dplyr")
library(dplyr)
install.packages("lsmeans")
install.packages("MuMIn")
install.packages("ggplot2")
install.packages("MuMIn")
install.packages("ggplot2")
#Making a subset only consistent of integers/numbers
xx=care[,sapply(care,is.integer)] #this is to make a subset only of the integers (numbers)
xx
care=read.table(file="caredata.csv", header=TRUE, sep=",")
names(care)
str(care)
#Packages used
library(nlme)
library(lattice)
library(dplyr)
#packages gotten from last years project
install.packages("lme4")
library(lme4)
library(geepack)
install.packages("lsmeans")
library(lsmeans)
install.packages("dplyr")
library(dplyr)
install.packages("MuMIn")
library(MuMIn)
install.packages("ggplot2")
library(ggplot2)
#Putting the 4 condition in as a factor
care$cond.f=as.factor(care$cond)
str(care)
#Making a subset only consistent of integers/numbers
xx=care[,sapply(care,is.integer)] #this is to make a subset only of the integers (numbers)
xx
install.packages("lsmeans")
install.packages("MuMIn")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("dplyr")
m1=gls(foodgrunt~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(foodgrunt~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.foodgrunt = mean(foodgrunt, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.foodgrunt=sd(foodgrunt, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(foodgrunt)), # of observations, excluding NAs.
se.foodgrunt=s.foodgrunt/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.foodgrunt, fill=id, label=m.foodgrunt)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.foodgrunt, ymax=m.foodgrunt+se.foodgrunt), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of foodgrunt") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
m1=gls(grunt~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(grunt~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.grunt = mean(grunt, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.grunt=sd(grunt, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(grunt)), # of observations, excluding NAs.
se.grunt=s.grunt/sqrt(n))
ggplot(data=x1,
aes(x=cond.f, y=m.grunt, fill=id, label=m.grunt)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.grunt, ymax=m.grunt+se.grunt), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of grunt") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
m1=gls(lipsmack~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(lipsmack~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.lipsmack = mean(lipsmack, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.lipsmack=sd(lipsmack, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(lipsmack)), # of observations, excluding NAs.
se.lipsmack=s.lipsmack/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.lipsmack, fill=id, label=m.lipsmack)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.lipsmack, ymax=m.lipsmack+se.lipsmack), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of lipsmacks") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
m1=gls(pbaboon~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(pbaboon~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.pbaboon = mean(pbaboon, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.pbaboon=sd(pbaboon), na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(pbaboon)), # of observations, excluding NAs.
se.pbaboon=s.pbaboon/sqrt(n))
x1 <- group_by(care, cond.f, id) %>%
summarize(m.pbaboon = mean(pbaboon, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.pbaboon=sd(pbaboon, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(pbaboon)), # of observations, excluding NAs.
se.pbaboon=s.pbaboon/sqrt(n))
x1
#Trying to plot the amount of neutral counts there are for each individual
ggplot(data=x1,
aes(x=cond.f, y=m.pbaboon, fill=id, label=m.pbaboon)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.pbaboon, ymax=m.pbaboon+se.pbaboon), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Number of presentations to baboons") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
#load data
care=read.table(file="caredata.csv", header=TRUE, sep=",")
names(care)
str(care)
#Packages used
library(nlme)
library(dplyr)
#packages gotten from last years project
library(lattice)
install.packages("lme4")
library(lme4)
library(geepack)
install.packages("lsmeans")
library(lsmeans)
install.packages("dplyr")
library(dplyr)
install.packages("MuMIn")
xx=care[,sapply(care,is.integer)] #this is to make a subset only of the integers (numbers)
xx
install.packages("lsmeans")
#Adding counts and duration of the 3 behavioral type (positive, negative and neutral)
care$positivect=rowSums(care[,c("foodgrunt", "grunt","lipsmack","pbaboon", "phuman","hgroomct","bgroomct","ghgroomct","gbgroomct","penisd", "playb", "plays","manenrichct","embraceh", "embraceb", "dproxct","dproxout", "movetoobs","playvocal")])
install.packages("lsmeans")
care$positivect
care$positived=rowSums(care[,c("hgroomd","bgroomd","ghgroomd","gbgroomd","manenrichd")])
care$positived
care$negativect=rowSums(care[,c("iproxct", "iproxout","threatg", "bark", "headshake", "yawn", "aggb", "pace", "aggdisp", "teeth", "rubgen", "sway", "turn", "scream")])
care$negativect
care$neutralct=rowSums(care[,c("sgroomct", "eatct","drink","foragect", "restct","schratch", "other")])
care$neutralct
care$neutrald=rowSums(care[,c("sgroomd","eatd","foraged","restd")] )6
care$neutrald
care$neutrald=rowSums(care[,c("sgroomd","eatd","foraged","restd")] )
care$neutrald
