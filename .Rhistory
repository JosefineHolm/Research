plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.plays = mean(plays, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.plays=sd(plays, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(plays)), # of observations, excluding NAs.
se.plays=s.plays/sqrt(n))
#Trying to plot the amount of neutral counts there are for each individual
ggplot(data=x1,
aes(x=cond.f, y=m.plays, fill=id, label=m.plays)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.plays, ymax=m.plays+se.plays), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Play with itself") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
m1=gls(manenrichct~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(manenrichct~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m1, add.smooth=FALSE, which=1)
E=resid(m1)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m1))
qqline(residuals(m1))
ad.test(residuals(m1))#this one says error
summary(m1)
lsmeans(m1,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.manenrichct = mean(manenrichct, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.manenrichct=sd(manenrichct, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(manenrichct)), # of observations, excluding NAs.
se.manenrichct=s.manenrichct/sqrt(n))
ggplot(data=x1,
aes(x=cond.f, y=m.manenrichct, fill=id, label=m.plays)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.manenrichct, ymax=m.manenrichct+se.manenrichct), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Play with itself") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
ggplot(data=x1,
aes(x=cond.f, y=m.manenrichct, fill=id, label=m.manenrichct)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.manenrichct, ymax=m.manenrichct+se.manenrichct), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Manipulate enrichment count") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
lsmeans(m1,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
lsmeans(m1,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
m1=gls(manenrichd~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(manenrichd~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
#There are no significant difference for play self
#making a table that will show the means per individual that can be graphed not sure it works
x1 <- group_by(care, cond.f, id) %>%
summarize(m.manenrichd = mean(manenrichd, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.manenrichd=sd(manenrichd, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(manenrichd)), # of observations, excluding NAs.
se.manenrichd=s.manenrichd/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.manenrichd, fill=id, label=m.manenrichd)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.manenrichd, ymax=m.manenrichd+se.manenrichd), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Manipulate enrichment duration") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
m1=gls(embraceh~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(embraceh~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.embraceh = mean(embraceh, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.embraceh=sd(embraceh, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(embraceh)), # of observations, excluding NAs.
se.embraceh=s.embraceh/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.embraceh, fill=id, label=m.embraceh)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.embraceh, ymax=m.embraceh+se.embraceh), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Embrace human") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
m1=gls(embraceb~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(embraceb~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.embraceb = mean(embraceb, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.embraceb=sd(embraceb, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(embraceb)), # of observations, excluding NAs.
se.embraceb=s.embraceb/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.embraceb, fill=id, label=m.embraceb)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.embraceb, ymax=m.embraceb+se.embraceb), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Embrace baboon") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
m1=gls(deproxct~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m1=gls(deproxct~cond.f, data=care, na.action=na.omit, method="ML")
m1=gls(dproxct~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(dproxct~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m1, add.smooth=FALSE, which=1)
E=resid(m1)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m1))
qqline(residuals(m1))
ad.test(residuals(m1))#this one says error
summary(m1)
lsmeans(m1,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
x1 <- group_by(care, cond.f, id) %>%
summarize(m.dproxct = mean(dproxct, na.rm = TRUE), # na.rm = TRUE to remove missing values
s.dproxct=sd(dproxct, na.rm = TRUE),  # na.rm = TRUE to remove missing values
n = sum(!is.na(dproxct)), # of observations, excluding NAs.
se.dproxct=s.dproxct/sqrt(n))
x1
ggplot(data=x1,
aes(x=cond.f, y=m.dproxct, fill=id, label=m.dproxct)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.embraceb, ymax=m.embraceb+se.embraceb), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Decrease proximity caretaker") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
ggplot(data=x1,
aes(x=cond.f, y=m.dproxct, fill=id, label=m.dproxct)) +
geom_bar(stat="identity", position=position_dodge(), color = "black") +
geom_errorbar(aes(ymin=m.dproxct, ymax=m.dproxct+se.dproxct), width=0.2,
position=position_dodge(0.9)) +
scale_fill_manual(values=c("black","white", "light grey", "dark grey")) +
xlab("ID") +
ylab("Decrease proximity caretaker") +
ylim(0,15) +
labs(fill="id") +
theme_bw() +
theme(panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
legend.title=element_text(size=6),
legend.key=element_blank(),
legend.position=c(0.5,0.95),
legend.text=element_text(size=8),
legend.background=element_blank(),
legend.direction="horizontal",
legend.key.size=unit(0.3, "cm"),
axis.title.y=element_text(size=8),
axis.title.x=element_text(size=8),
axis.text.x=element_text(size=8))
care$positivect=rowSums(care[,c("foodgrunt", "grunt","lipsmack","pbaboon", "phuman","hgroomct","bgroomct","ghgroomct","gbgroomct","penisd", "playb", "plays","manenrichct","embraceh", "embraceb", "dproxct","dproxout", "movetoobs","playvocal")])
care$positivect
m1=gls(neutralct~cond.f, data=care, na.action=na.omit, method="ML")
care$positivect=rowSums(care[,c("foodgrunt", "grunt","lipsmack","pbaboon", "phuman","hgroomct","bgroomct","ghgroomct","gbgroomct","penisd", "playb", "plays","manenrichct","embraceh", "embraceb", "dproxct","dproxout", "movetoobs","playvocal")], na.rm=T)
care$positivect
care$positived=rowSums(care[,c("hgroomd","bgroomd","ghgroomd","gbgroomd","manenrichd")], na.rm=T)
care$positived
care$negativect=rowSums(care[,c("iproxct", "iproxout","threatg", "bark", "headshake", "yawn", "aggb", "pace", "aggdisp", "teeth", "rubgen", "sway", "turn", "scream")], na.rm=T)
care$negativect
care$neutralct=rowSums(care[,c("sgroomct", "eatct","drink","foragect", "restct","schratch", "other")], na.rm=T)
care$neutralct
care$neutrald=rowSums(care[,c("sgroomd","eatd","foraged","restd")], na.rm=T )
care$neutrald
#The numbers are not showing for the positive and negative counts
#Neutral Count behaviors
#######################################################################
#model one without random factor
m1=gls(neutralct~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
#model2 - try put individual in as a main factor so cond.f+id
m2=lme(neutralct~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
#trying the other residuals plot clay showed
E1<-residuals(m2)
plot(filter(care, !is.na(neutralct)) %>% dplyr::select(id),
E1, xlab="id", ylab="Residuals")
plot(filter(care, !is.na(neutralct)) %>% dplyr::select(cond.f),
E1, xlab="id", ylab="Residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
install.packages("nortest")
library(nortest)
m1=gls(ghgroomd~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
#model2 - try put individual in as a main factor so cond.f+id
m2=lme(ghgroomd~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
library(nlme)
library(dplyr)
#packages gotten from last years project
library(lattice)
install.packages("lme4")
library(lme4)
library(geepack)
install.packages("lsmeans")
library(lsmeans)
install.packages("dplyr")
library(dplyr)
install.packages("MuMIn")
library(MuMIn)
install.packages("ggplot2")
library(ggplot2)
install.packages("lsmeans")
install.packages("dplyr")
install.packages("lsmeans")
install.packages("dplyr")
install.packages("dplyr")
install.packages("lsmeans")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(lme4)
care=read.table(file="caredata.csv", header=TRUE, sep=",")
names(care)
str(care)
library(nlme)
library(dplyr)
library(lattice)
library(lme4)
library(geepack)
library(lsmeans)
library(dplyr)
library(MuMIn)
library(ggplot2)
care$cond.f=as.factor(care$cond)
str(care)
xx=care[,sapply(care,is.integer)] #this is to make a subset only of the integers (numbers)
xx
m1=gls(bgroomct~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
#model2 - try put individual in as a main factor so cond.f+id
m2=lme(bgroomct~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
patats<-subset(care, id=="patats")#code for subsetting
hope<-subset(care, id=="hope")
hope<-subset(care, id=="hope")
ayana<-subset(care, id=="ayana")
females=rbind(patats, hope, ayana)
names(females)
str(females)
females=droplevels(females)
str(females)
patats<-subset(care, id=="patats")#code for subsetting
hope<-subset(care, id=="hope")
ayana<-subset(care, id=="ayana")
females=rbind(patats, hope, ayana)
females=droplevels(females)
str(females)
patats<-subset(care, id=="patats")#code for subsetting
hope<-subset(care, id=="hope")
ayana<-subset(care, id=="ayana")
females=rbind(patats, hope, ayana)
females$id
hope
females=droplevels(females, exclude="hope")
females$id
m1=gls(pbaboon~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
m2=lme(pbaboon~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
ad.test(residuals(m2))#this one says error
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
females=subset(care,id!="stevie")
females$id
females=droplevels(females)
females$id
m1=gls(pbaboon~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
#model2 - try put individual in as a main factor so cond.f+id
m2=lme(pbaboon~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
ad.test(residuals(m2))#this one says error
summary(m2)
lsmeans(m2,pairwise~cond.f)#This one schould be able to show how the behaviors have changes
m1=gls(embraceb~cond.f, data=care, na.action=na.omit, method="ML")
summary(m1)
#model2 - try put individual in as a main factor so cond.f+id
m2=lme(embraceb~cond.f, random=~1|id,data=care, na.action=na.omit, method="ML")
summary(m2)
anova(m1,m2)
#Since the model with the random factor had a lower IAC score we wanna use that
#Plotting residuals for m2 to check if we can use this model
op=par(mfrow=c(2,2), mar=c(5,4,1,2))
plot(m2, add.smooth=FALSE, which=1)
E=resid(m2)
hist(E,xlab="residuals", main="")
plot(care$cond.f, E, xlab="Treatment", ylab="residuals")
plot(care$id, E, xlab="id", ylab="residuals")
qqnorm(residuals(m2))
qqline(residuals(m2))
